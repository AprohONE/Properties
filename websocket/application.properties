server.port=8080
spring.application.name=websocket

info.app.name=websocket
info.app.version=1.0

logging.level.ru.igap=DEBUG
logging.pattern.console=%d{"yyyy/MM/dd HH:mm:ss,SSS"} [%p] - %msg%n

server.forward-headers-strategy=framework

springdoc.packages-to-scan=ru.igap
springdoc.api-docs.path=/api-docs

#KAFKA
spring.cloud.stream.kafka.binder.brokers=${KAFKA_BROKERS}
spring.cloud.stream.kafka.binder.auto-create-topics=true
spring.cloud.stream.kafka.binder.min-partition-count=2
spring.cloud.stream.kafka.binder.auto-add-partitions=true

#KAFKA-CONSUMER
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
spring.kafka.consumer.auto-offset-reset=latest

spring.cloud.function.definition=core-event;adviser-event

spring.cloud.stream.bindings.core-event-in-0.destination=core.websocket.message.event
spring.cloud.stream.bindings.core-event-in-0.group=websocket
spring.cloud.stream.bindings.adviser-event-in-0.destination=adviser.websocket.message.event
spring.cloud.stream.bindings.adviser-event-in-0.group=websocket

#APPLICATION
ru.igap.request.jwt-token-header-name = Authorization
ru.igap.request.authorization-scheme = Bearer

ru.igap.projects.multiassistant.jwt.jwt-key=${SECURITY_JWT_KEY}

