server.port=8080
spring.application.name=security
server.http2.enabled=true

info.app.name=security
info.app.version=1.0

logging.level.ru.igap=DEBUG
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.pattern.console=%d{"yyyy/MM/dd HH:mm:ss,SSS"} [%p] - %msg%n

server.forward-headers-strategy=framework

springdoc.swagger-ui.path=/api/v1/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.doc-expansion=none
springdoc.api-docs.path=/api/v1/api-docs
springdoc.default-consumes-media-type=application/json
springdoc.default-produces-media-type=application/json

#-------------------Postgresql-------------------------------------------------------------------
#spring.datasource.username = ${DB_USERNAME_LOCAL}
#spring.datasource.password = ${DB_PASSWORD_LOCAL}
#spring.datasource.url=jdbc:postgresql://${DB_SERVER_LOCAL}:${DB_PORT_LOCAL}/${DB_NAME_LOCAL}?prepareThreshold=0
spring.datasource.username = ${DB_USERNAME}
spring.datasource.password = ${DB_PASSWORD}
spring.datasource.url=jdbc:postgresql://${DB_SERVER}:${DB_PORT}/${DB_NAME}?prepareThreshold=0

spring.datasource.hikari.maximum-pool-size=5
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.default_schema="security"

spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.format_sql=false

#Flyway
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.default-schema=security
spring.flyway.schemas=security

#-------------------Application-------------------------------------------------------------------
spring.config.import=classpath:routes.yaml,classpath:cors.yaml
spring.cache.type=none

ru.igap.projects.multiassistant.jwt.jwt-key=${SECURITY_JWT_KEY}
#-------------------Liveness & readiness probe----------------------------------------------------
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true



